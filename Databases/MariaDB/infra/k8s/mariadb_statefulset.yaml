apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mariadb-sts
spec:
  serviceName: mariadb-service
  replicas: 2
  selector:
    matchLabels:
      app: mariadb-app
  volumeClaimTemplates:
    - metadata:
        name: mariadb-volume
      spec:
        storageClassName: mariadb-sc
        accessModes: [ReadWriteOnce]
        resources:
          requests:
            storage: 1Gi
  template:
    metadata:
      labels:
        app: mariadb-app
    spec:
    # Volumes available 
      volumes:
      - name: mariadb-config-map
        configMap:
          name: mariadb-configmap
          #defaultMode: 0544
      - name: mariadb-config
        emptyDir: {}
      - name: initdb
        emptyDir: {}

      initContainers:
      - name: init-mariadb
        image: mariadb
        imagePullPolicy: Always
        volumeMounts:
          - name: mariadb-config-map
            mountPath: /mnt/config-map
          - name: mariadb-config
            mountPath: /etc/mysql/conf.d/
          - name: initdb
            mountPath: /docker-entrypoint-initdb.d
        command:
          - bash
          - "-c"
          - |
            set -ex
            echo 'Starting init-mariadb'
            
            # Check config map to directory that already exists 
            # (but must be used as a volume for main container)
            
            ls /mnt/config-map

            # Statefulset has sticky identity, number should be last

            [[ `hostname` =~ -([0-9]+)$ ]] || exit 1
            ordinal=${BASH_REMATCH[1]}

            # Copy appropriate conf.d files from config-map to 
            # mariadb-config volume (emptyDir) depending on pod number
            
            if [[ $ordinal -eq 0 ]]; then
              # This file holds SQL for connecting to primary

              cp /mnt/config-map/primary.cnf /etc/mysql/conf.d/server-id.cnf

              # Create the users needed for replication on primary on a volume
              # initdb (emptyDir)

              cp /mnt/config-map/primary.sql /docker-entrypoint-initdb.d
            else
              # This file holds SQL for connecting to secondary

              cp /mnt/config-map/replica.cnf /etc/mysql/conf.d/server-id.cnf

              # On replicas use secondary configuration on initdb volume

              cp /mnt/config-map/secondary.sql /docker-entrypoint-initdb.d
            fi
            # Add an offset to avoid reserved server-id=0 value.
            
            echo server-id=$((3000 + $ordinal)) >> etc/mysql/conf.d/server-id.cnf
            ls /etc/mysql/conf.d/
            cat /etc/mysql/conf.d/server-id.cnf
      restartPolicy: Always
      containers:
        - name: mariadb-container
          image: mariadb
          resources:
            requests:
              memory: "128Mi"
              cpu: "500m"
            limits:
              memory: "500Mi"
              cpu: "500m"
          volumeMounts:
            - name: mariadb-volume
              mountPath: "/var/lib/mysql"
            - name: mariadb-config
              mountPath: "/etc/mysql/conf.d"
            - name: initdb
              mountPath: /docker-entrypoint-initdb.d
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: mypass
            - name: MYSQL_INITDB_SKIP_TZINFO
              value: "1"

---
apiVersion: v1
kind: Service
metadata:
  name: mariadb-service
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: mariadb-app
  ports:
    - port: 3306
      targetPort: 3306
